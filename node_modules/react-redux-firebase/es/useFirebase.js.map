{"version":3,"sources":["../src/useFirebase.js"],"names":["createUseFirebase","ReactReduxFirebaseContext"],"mappings":"6TAiBO,GAAMA,CAAAA,iBAAiB,CAAG,iBAAM,WAAM,CAC3C,MAAO,sBAAWC,kCAAX,CACR,CAFgC,CAA1B,C,yDA2BQD,iBAAiB,E","sourcesContent":["import { useContext } from 'react'\nimport ReactReduxFirebaseContext from './ReactReduxFirebaseContext'\n\n/**\n * @name createUseFirebase\n * @description Function that creates a react hook which provides `firebase` object.\n *\n * **WARNING!!** This is an advanced feature, and should only be used when\n * needing to access a firebase instance created under a different store key.\n * Firebase state (`state.firebase`)\n * @return {Function} - A hook fucntion that return firebase object.\n * @example <caption>Basic</caption>\n * import { createUseFirebase } from 'react-redux-firebase'\n *\n * // create useFirebase\n * const useFirebase = createUseFirebase()\n */\nexport const createUseFirebase = () => () => {\n  return useContext(ReactReduxFirebaseContext)\n}\n\n/**\n * @name useFirebase\n * @description React hook that provides `firebase` object.\n * Firebase is gathered from `store.firebase`, which is attached to store\n * by the store enhancer (`reactReduxFirebase`) during setup.\n * **NOTE**: This version of the Firebase library has extra methods, config,\n * and functionality which give it it's capabilities such as dispatching\n * actions.\n * @return {Object} - Firebase instance\n * @example <caption>Basic</caption>\n * import { useFirebase } from 'react-redux-firebase'\n *\n * function AddData() {\n *   const firebase = useFirebase()\n *   return (\n *     <div>\n *       <button onClick={() => firebase.push('todos', { done: false, text: 'Sample' })}>\n *         Add Sample Todo\n *       </button>\n *     </div>\n *   )\n * }\n */\nexport default createUseFirebase()\n"],"file":"useFirebase.js"}