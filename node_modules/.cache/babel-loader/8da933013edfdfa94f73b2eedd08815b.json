{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar flatten = require(\"array-flatten\");\n\nvar create_events_1 = require(\"./create-events\");\n\nvar get_events_with_matching_key_1 = require(\"./get-events-with-matching-key\");\n\nvar register_events_1 = require(\"./register-events\");\n/**\n * Create a meta reducer that synchronizes actions to analytics events.\n */\n\n\nfunction createMetaReducer(eventsMap, target, extensions) {\n  if (extensions === void 0) {\n    extensions = {};\n  }\n\n  var getEvents = typeof eventsMap === 'function' ? function (action) {\n    return flatten([eventsMap(action)]);\n  } : function (action) {\n    return get_events_with_matching_key_1.default(eventsMap, action.type);\n  };\n  /* Why not arrow functions? AOT... */\n\n  /* tslint:disable: only-arrow-functions */\n\n  return function (reducer) {\n    return function (prevState, action) {\n      var nextState = reducer(prevState, action);\n      var events = create_events_1.default(getEvents(action), prevState, action, nextState);\n      register_events_1.default(events, target, extensions, prevState, action, nextState);\n      return nextState;\n    };\n  };\n}\n\nexports.default = createMetaReducer;","map":null,"metadata":{},"sourceType":"script"}