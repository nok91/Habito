{"ast":null,"code":"import _slicedToArray from \"/Users/mohammednokri/Desktop/Projects/React Projects/Habito/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/mohammednokri/Desktop/Projects/React Projects/Habito/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/mohammednokri/Desktop/Projects/React Projects/Habito/src/hocs/withUserFlagOnly.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport LoadingIndicator from '../components/loading';\nimport useViewDocument from '../hooks/useViewDocument';\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var auth = _ref.firebase.auth;\n  return {\n    auth: auth\n  };\n};\n\nexport default (function (Component, whichFlagName) {\n  return connect(mapStateToProps)(function (_ref2) {\n    var auth = _ref2.auth,\n        otherProps = _objectWithoutProperties(_ref2, [\"auth\"]);\n\n    if (!whichFlagName) {\n      return 'Need flag name to restrict access';\n    } // On fresh load of a page we wait until firebase gets back to us\n\n\n    if (!auth.isLoaded) {\n      return React.createElement(LoadingIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      });\n    }\n\n    if (!auth.uid) {\n      return 'Not logged in (should wrap this component in redirect on not auth HOC)';\n    }\n\n    var _useViewDocument = useViewDocument('users', auth.uid),\n        _useViewDocument2 = _slicedToArray(_useViewDocument, 3),\n        isLoading = _useViewDocument2[0],\n        isErrored = _useViewDocument2[1],\n        user = _useViewDocument2[2];\n\n    if (isLoading) {\n      return React.createElement(LoadingIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n    }\n\n    if (isErrored || !user) {\n      return 'Error fetching your details';\n    }\n\n    if (user[whichFlagName] !== true) {\n      return 'Sorry you cannot access this area as this user';\n    }\n\n    return React.createElement(Component, Object.assign({}, otherProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  });\n});","map":{"version":3,"sources":["/Users/mohammednokri/Desktop/Projects/React Projects/Habito/src/hocs/withUserFlagOnly.jsx"],"names":["React","connect","LoadingIndicator","useViewDocument","mapStateToProps","auth","firebase","Component","whichFlagName","otherProps","isLoaded","uid","isLoading","isErrored","user"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAeC,IAAf,QAAGC,QAAH,CAAeD,IAAf;AAAA,SAA6B;AAAEA,IAAAA,IAAI,EAAJA;AAAF,GAA7B;AAAA,CAAxB;;AAEA,gBAAe,UAACE,SAAD,EAAYC,aAAZ;AAAA,SACbP,OAAO,CAACG,eAAD,CAAP,CAAyB,iBAA6B;AAAA,QAA1BC,IAA0B,SAA1BA,IAA0B;AAAA,QAAjBI,UAAiB;;AACpD,QAAI,CAACD,aAAL,EAAoB;AAClB,aAAO,mCAAP;AACD,KAHmD,CAKpD;;;AACA,QAAI,CAACH,IAAI,CAACK,QAAV,EAAoB;AAClB,aAAO,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,QAAI,CAACL,IAAI,CAACM,GAAV,EAAe;AACb,aAAO,wEAAP;AACD;;AAZmD,2BAcfR,eAAe,CAAC,OAAD,EAAUE,IAAI,CAACM,GAAf,CAdA;AAAA;AAAA,QAc7CC,SAd6C;AAAA,QAclCC,SAdkC;AAAA,QAcvBC,IAduB;;AAgBpD,QAAIF,SAAJ,EAAe;AACb,aAAO,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,QAAIC,SAAS,IAAI,CAACC,IAAlB,EAAwB;AACtB,aAAO,6BAAP;AACD;;AAED,QAAIA,IAAI,CAACN,aAAD,CAAJ,KAAwB,IAA5B,EAAkC;AAChC,aAAO,gDAAP;AACD;;AAED,WAAO,oBAAC,SAAD,oBAAeC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GA7BD,CADa;AAAA,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport LoadingIndicator from '../components/loading'\nimport useViewDocument from '../hooks/useViewDocument'\n\nconst mapStateToProps = ({ firebase: { auth } }) => ({ auth })\n\nexport default (Component, whichFlagName) =>\n  connect(mapStateToProps)(({ auth, ...otherProps }) => {\n    if (!whichFlagName) {\n      return 'Need flag name to restrict access'\n    }\n\n    // On fresh load of a page we wait until firebase gets back to us\n    if (!auth.isLoaded) {\n      return <LoadingIndicator />\n    }\n\n    if (!auth.uid) {\n      return 'Not logged in (should wrap this component in redirect on not auth HOC)'\n    }\n\n    const [isLoading, isErrored, user] = useViewDocument('users', auth.uid)\n\n    if (isLoading) {\n      return <LoadingIndicator />\n    }\n\n    if (isErrored || !user) {\n      return 'Error fetching your details'\n    }\n\n    if (user[whichFlagName] !== true) {\n      return 'Sorry you cannot access this area as this user'\n    }\n\n    return <Component {...otherProps} />\n  })\n"]},"metadata":{},"sourceType":"module"}