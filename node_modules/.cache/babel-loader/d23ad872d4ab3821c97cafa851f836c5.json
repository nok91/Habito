{"ast":null,"code":"import _objectWithoutProperties from \"/Users/mohammednokri/Desktop/Projects/React Projects/Habito/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/mohammednokri/Desktop/Projects/React Projects/Habito/src/hocs/withRedirectOnAuth.jsx\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { push } from 'connected-react-router';\nimport * as routes from '../routes';\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var auth = _ref.firebase.auth;\n  return {\n    auth: auth\n  };\n};\n\nvar mapDispatchToProps = {\n  push: push\n};\nexport default (function (Component) {\n  return connect(mapStateToProps, mapDispatchToProps)(withRouter(function (_ref2) {\n    var auth = _ref2.auth,\n        push = _ref2.push,\n        otherProps = _objectWithoutProperties(_ref2, [\"auth\", \"push\"]);\n\n    useEffect(function () {\n      // On fresh load of a page we wait until firebase gets back to us\n      if (!auth.isLoaded) {\n        return;\n      }\n\n      if (auth.uid) {\n        push(routes.home);\n      }\n    }, [auth, push]);\n\n    if (auth.uid) {\n      return null;\n    }\n\n    return React.createElement(Component, Object.assign({}, otherProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }));\n});","map":{"version":3,"sources":["/Users/mohammednokri/Desktop/Projects/React Projects/Habito/src/hocs/withRedirectOnAuth.jsx"],"names":["React","useEffect","connect","withRouter","push","routes","mapStateToProps","auth","firebase","mapDispatchToProps","Component","otherProps","isLoaded","uid","home"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,OAAO,KAAKC,MAAZ,MAAwB,WAAxB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAeC,IAAf,QAAGC,QAAH,CAAeD,IAAf;AAAA,SAA6B;AAAEA,IAAAA,IAAI,EAAJA;AAAF,GAA7B;AAAA,CAAxB;;AAEA,IAAME,kBAAkB,GAAG;AAAEL,EAAAA,IAAI,EAAJA;AAAF,CAA3B;AAEA,gBAAe,UAAAM,SAAS;AAAA,SACtBR,OAAO,CACLI,eADK,EAELG,kBAFK,CAAP,CAIEN,UAAU,CAAC,iBAAmC;AAAA,QAAhCI,IAAgC,SAAhCA,IAAgC;AAAA,QAA1BH,IAA0B,SAA1BA,IAA0B;AAAA,QAAjBO,UAAiB;;AAC5CV,IAAAA,SAAS,CAAC,YAAM;AACd;AACA,UAAI,CAACM,IAAI,CAACK,QAAV,EAAoB;AAClB;AACD;;AAED,UAAIL,IAAI,CAACM,GAAT,EAAc;AACZT,QAAAA,IAAI,CAACC,MAAM,CAACS,IAAR,CAAJ;AACD;AACF,KATQ,EASN,CAACP,IAAD,EAAOH,IAAP,CATM,CAAT;;AAWA,QAAIG,IAAI,CAACM,GAAT,EAAc;AACZ,aAAO,IAAP;AACD;;AAED,WAAO,oBAAC,SAAD,oBAAeF,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAjBS,CAJZ,CADsB;AAAA,CAAxB","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { push } from 'connected-react-router'\nimport * as routes from '../routes'\n\nconst mapStateToProps = ({ firebase: { auth } }) => ({ auth })\n\nconst mapDispatchToProps = { push }\n\nexport default Component =>\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(\n    withRouter(({ auth, push, ...otherProps }) => {\n      useEffect(() => {\n        // On fresh load of a page we wait until firebase gets back to us\n        if (!auth.isLoaded) {\n          return\n        }\n\n        if (auth.uid) {\n          push(routes.home)\n        }\n      }, [auth, push])\n\n      if (auth.uid) {\n        return null\n      }\n\n      return <Component {...otherProps} />\n    })\n  )\n"]},"metadata":{},"sourceType":"module"}